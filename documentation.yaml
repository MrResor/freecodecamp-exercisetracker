openapi: 3.0.3

info:
  title: Exercise Tracker Microservice
  description: Solution of a freecodecamp task for creating a urlshortener microservice.
  contact:
    email: jakusienko@gmail.com
  license:
    name: MIT
    url: https://en.wikipedia.org/wiki/MIT_License
  version: 1.1.0

externalDocs:
  url: https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker
  description: FreeCodeCamp

servers:
  - url: https://exercisetracker.profresor.net

paths:
  /api/users:
    post:
      tags:
        - endpoints
      summary: Add user
      description: Takes in a username and returns the user object with a unique id.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              example:
                username: "exercise_tracker"
      responses:
        200:
          description: User already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: No username provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: "Username is required"
    get:
      tags:
        - endpoints
      summary: Get all users
      description: Returns an array of all users in the database.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /api/users/{id}/exercises:
    post:
      tags:
        - endpoints
      summary: Add exercise
      description: Takes in a user id, description, duration and optional date fields and returns the user object with the exercise added.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to add an exercise to
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  required: true
                duration:
                  type: integer
                  required: true
                date:
                  type: string
                  format: date-time
              example:
                description: Running
                duration: 30
                date: 2023-10-01
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exercise"
        
        400:
          description: Incorrect request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                missingFields:
                  summary: Missing required fields
                  value:
                    error: Description and duration are required
                invalidDuration:
                  summary: Invalid duration
                  value:
                    error: Duration must be a number
                invalidDate:
                  summary: Invalid date
                  value:
                    error: Date must be a valid date
        
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: User not found

  /api/users/{id}/logs:
    get:
      tags:
        - endpoints
      summary: Get user log
      description: Returns the complete exercise log of a user with the id specified in the path.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to get the log for
          schema:
            type: string
          examples:
            validId:
              summary: Valid user ID
              value: id_12
            invalidId:
              summary: Invalid user ID
              value: invalid_id
        - name: from
          in: query
          description: Filter exercises from this date (YYYY-MM-DD)
          schema:
            type: string
            format: date-time
          examples:
            validFrom:
              summary: Valid From date
              value: 2023-10-01
            invalidFrom:
              summary: Invalid From date
              value: invalid_date
        - name: to
          in: query
          description: Filter exercises to this date (YYYY-MM-DD)
          schema:
            type: string
            format: date-time
          examples:
            validTo:
              summary: Valid To date
              value: 2023-10-31
            invalidTo:
              summary: Invalid To date
              value: invalid_date
        - name: limit
          in: query
          description: Limit the number of exercises returned
          schema:
            type: integer
          examples:
            validLimit:
              summary: Valid Limit
              value: 5
            invalidLimit:
              summary: Invalid Limit
              value: invalid_limit

      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  count:
                    type: integer
                  log:
                    type: array
                    items:
                      $ref: "#/components/schemas/Log"
                example:
                  username: exercise_tracker
                  count: 2
                  _id: id_41
                  log:
                    - description: Running
                      duration: 30
                      date: Sun Oct 01 2023
                    - description: Cycling
                      duration: 45
                      date: Mon Oct 02 2023
        400:
          description: Incorrect request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                invalidFrom:
                  summary: Invalid From date
                  value:
                    error: From must be a valid date
                invalidTo:
                  summary: Invalid To date
                  value:
                    error: To must be a valid date
                FromAfterTo:
                  summary: From date after To date
                  value:
                    error: From date must be before To date
                invalidLimit:
                  summary: Invalid Limit
                  value:
                    error: Limit must be a number
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: User not found

  /api/hello:
    get:
      tags:
        - endpoints
      summary: API says hello
      description: Test endpoint to see if the API is running
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  greeting:
                    type: string
                example:
                  greting: "hello API"
      
components:
  schemas:
    User:
      type: object
      properties:
        username: 
          type: string
        _id:
          type: string
      example: 
        username: "exercise_tracker"
        _id: "id_41"

    Exercise:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        description:
          type: string
        duration:
          type: integer
        date:
          type: string
          format: date-time
      example:
        _id: "id_41"
        username: "exercise_tracker"
        description: "Running"
        duration: 30
        date: "Sun Oct 01 2023"

    Log:
      type: object
      properties:
      description:
        type: string
      duration:
        type: integer
      date:
        type: string
        format: date-time
      example:
        description: "Running"
        duration: 30
        date: "Sun Oct 01 2023"
         